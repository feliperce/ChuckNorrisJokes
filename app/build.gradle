apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def ENDPOINT_DEBUG_URL = "https://api.chucknorris.io/"
def ENDPOINT_RELEASE_URL = "https://api.chucknorris.io/"

android {

    dataBinding {
        enabled true
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.chucknorrisjokes"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", 'ENDPOINT_URL', "\"$ENDPOINT_RELEASE_URL\""
        }
        debug {
            buildConfigField "String", 'ENDPOINT_URL', "\"$ENDPOINT_DEBUG_URL\""
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$ktx_version"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    // Test
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$androidxtest_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Anko
    implementation "org.jetbrains.anko:anko:$anko_version"

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // Lifecycle & Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gsonconverter_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpinterceptor_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitcoroutine_version"

    // MockWebServer
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    // RecyclerView
    implementation "com.android.support:recyclerview-v7:$recyclerview_version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // Dependência principal do Mockito
    testImplementation 'org.mockito:mockito-core:2.28.2'
    // Dependência do Mockito para testes no Android
    androidTestImplementation 'org.mockito:mockito-android:2.28.2'
    // Dependência do Mockito para ser possível mockar classes e métodos constantes
    testImplementation 'org.mockito:mockito-inline:2.28.2'

}
